#!/bin/sh
#------------------------------------------------------
# Precondition
#------------------------------------------------------
# $ sudo apt-get install dialog
# $ sudo apt-get install expect
#------------------------------------------------------

# XXX. If you want to add a server, please edit it here.
# The connection type is specified by a colon.
#   0 : User login
#   1 : Root login after user login
#   2 : Secure logins that do not store passwords in scripts
ENVS=("10.52.3.102:2" "10.52.3.103:1" "192.168.0.10:2")

result=$(dialog --menu "Choose virtualenv:" \
		30 50 20 \
		$(for ((i = 0; i < ${#ENVS[@]}; i++));do echo "$i ${ENVS[$i]} ";done) \
		3>&2 2>&1 1>&3)

# User login
conn_user_ssh() 
{
	SERVER=$1
	ID=$2
	PASSWD=$3

	ssh-keygen -R ${SERVER}

	expect -c "spawn ssh ${ID}@${SERVER}"\
	-c "trap {	 set rows [stty rows];  set cols [stty columns]; stty rows \$rows columns \$cols < \$spawn_out(slave,name);} WINCH" \
	-c "expect -re \"\(yes/no\)? \"" \
	-c "send \"yes\r\"" \
	-c "expect -nocase -re \"암호|password\"" \
	-c "send \"${PASSWD}\r\"" \
	-c "interact"
}

# Root login after user login
conn_root_ssh() 
{
	SERVER=$1
	ID=$2
	PASSWD1=$3
	PASSWD2=$4

	ssh-keygen -R ${SERVER}

	expect -c "spawn ssh ${ID}@${SERVER}"\
	-c "trap {	 set rows [stty rows];  set cols [stty columns]; stty rows \$rows columns \$cols < \$spawn_out(slave,name);} WINCH" \
	-c "expect -re \"\(yes/no\)? \"" \
	-c "send \"yes\r\"" \
	-c "expect -nocase -re \"암호|password\"" \
	-c "send \"${PASSWD1}\r\"" \
	-c "expect -re \"~]\"" \
	-c "send \"su -\r\"" \
	-c "expect -nocase -re \"암호|password\"" \
	-c "send \"${PASSWD2}\r\"" \
	-c "interact"
}

# Secure logins that do not store passwords in scripts
conn_insecure_ssh()
{
	SERVER=$1
	ID=$2

	passwd=$(dialog --title "Password" \
			--clear \
			--insecure \
			--passwordbox "Enter your password" 10 30 3>&2 2>&1 1>&3)

	if [ "$?" = 1 ];then
		echo "terminated.."
		exit 255
	fi

	conn_user_ssh "$1" "$2" "$passwd"
}

for ((i = 0; i < ${#ENVS[@]}; i++));do
	if [ "$result" == $i ];then
		IP=$(echo ${ENVS[$i]} | awk -F ':' '{print $1}')
		TYPE=$(echo ${ENVS[$i]} | awk -F ':' '{print $2}')
		if [ "${TYPE}" == "0" ];then
			conn_user_ssh ${IP} "caley" "Root_password"
		elif [ "${TYPE}" == "1" ];then
			conn_root_ssh ${IP} "caley" "User_password" "Root_password"
		elif [ "${TYPE}" == "2" ];then
			conn_insecure_ssh ${IP} "caley"
		fi
	fi
done

exit 0
